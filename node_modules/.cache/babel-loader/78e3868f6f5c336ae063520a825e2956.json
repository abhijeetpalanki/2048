{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proj\\\\2048\\\\src\\\\components\\\\Tile.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = _ref => {\n  let {\n    tile\n  } = _ref;\n  let classArray = ['tile'];\n  classArray.push('tile' + tile.value);\n\n  if (!tile.mergedInto) {\n    classArray.push(`position_${tile.row}_${tile.column}`);\n  }\n\n  if (tile.mergedInto) {\n    classArray.push('merged');\n  }\n\n  if (tile.isNew()) {\n    classArray.push('new');\n  }\n\n  if (tile.hasMoved()) {\n    classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["C:/Proj/2048/src/components/Tile.jsx"],"names":["React","Tile","tile","classArray","push","value","mergedInto","row","column","isNew","hasMoved","fromRow","toRow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACrB,MAAIC,UAAU,GAAG,CAAC,MAAD,CAAjB;AAEAA,EAAAA,UAAU,CAACC,IAAX,CAAgB,SAAOF,IAAI,CAACG,KAA5B;;AACA,MAAI,CAACH,IAAI,CAACI,UAAV,EAAsB;AAClBH,IAAAA,UAAU,CAACC,IAAX,CAAiB,YAAWF,IAAI,CAACK,GAAI,IAAGL,IAAI,CAACM,MAAO,EAApD;AACH;;AACD,MAAIN,IAAI,CAACI,UAAT,EAAqB;AACjBH,IAAAA,UAAU,CAACC,IAAX,CAAgB,QAAhB;AACH;;AACD,MAAIF,IAAI,CAACO,KAAL,EAAJ,EAAkB;AACdN,IAAAA,UAAU,CAACC,IAAX,CAAgB,KAAhB;AACH;;AACD,MAAIF,IAAI,CAACQ,QAAL,EAAJ,EAAqB;AACjBP,IAAAA,UAAU,CAACC,IAAX,CAAiB,YAAWF,IAAI,CAACS,OAAL,EAAe,OAAMT,IAAI,CAACU,KAAL,EAAa,EAA9D;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;KAAMX,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\n\r\nconst Tile = ({tile}) => {\r\n    let classArray = ['tile'];\r\n\r\n    classArray.push('tile'+tile.value);\r\n    if (!tile.mergedInto) {\r\n        classArray.push(`position_${tile.row}_${tile.column}`);\r\n    }\r\n    if (tile.mergedInto) {\r\n        classArray.push('merged');\r\n    }\r\n    if (tile.isNew()) {\r\n        classArray.push('new');\r\n    }\r\n    if (tile.hasMoved()) {\r\n        classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tile\r\n"]},"metadata":{},"sourceType":"module"}